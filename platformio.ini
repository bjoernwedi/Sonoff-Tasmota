; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/en/stable/projectconf.html

[platformio]
src_dir = sonoff
build_dir = E:\PLATFORMIO\.pioenvs

; *** Uncomment one of the lines below to build/upload only one environment
;env_default = sonoff
;env_default = sonoff-minimal
;env_default = sonoff-classic
;env_default = sonoff-knx
;env_default = sonoff-allsensors
;env_default = sonoff-BG
;env_default = sonoff-BR
;env_default = sonoff-CN
;env_default = sonoff-CZ
;env_default = sonoff-DE
;env_default = sonoff-ES
;env_default = sonoff-FR
;env_default = sonoff-GR
;env_default = sonoff-HU
;env_default = sonoff-IT
;env_default = sonoff-NL
;env_default = sonoff-PL
;env_default = sonoff-PT
;env_default = sonoff-RU
;env_default = sonoff-UK
;env_default = sonoff-TW
;env_default = sonoff-ds18x20-PL
;env_default = SONOFF_4CHPRO_RL-ds18x20-PL
;env_default = soil-wemeos-PL
;env_default = wemeos-d1-pro-PL
env_default = wemeos-d1-watter-PL


[esp82xx_defaults]
build_flags               = -D NDEBUG
                            -mtarget-align
                            -Wl,-Map,firmware.map

[core_2_3_0]
; *** Esp8266 core for Arduino version 2.3.0
platform                  = espressif8266@1.5.0
build_flags               = ${esp82xx_defaults.build_flags}
                            ;-Wl,-Tesp8266.flash.1m0.ld

[core_2_4_2]
; *** Esp8266 core for Arduino version 2.4.2
platform                  = espressif8266@1.8.0
build_flags               = ${esp82xx_defaults.build_flags}
                            ;-Wl;,-Teagle.flash.1m0.ld;-Tesp8266.flash.4m1m.ld ;
                            -lstdc++ -lsupc++
; lwIP 1.4 (Default)
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
                            -DVTABLES_IN_FLASH

[core_2_5_0]
; *** Esp8266 core for Arduino version Core 2.5.0 beta tested for Tasmota
platform                  = https://github.com/Jason2866/platform-espressif8266.git#Tasmota
build_flags               = ${esp82xx_defaults.build_flags}
                            ;-Wl,-Teagle.flash.1m.ld
; lwIP 1.4 (Default)
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwidth Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwidth no Features (Tasmota default)
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
                            -DVTABLES_IN_FLASH
                            -fno-exceptions
                            -lstdc++-nox

[core_stage]
; *** Esp8266 core for Arduino version latest beta
platform                  = https://github.com/platformio/platform-espressif8266.git#feature/stage
build_flags               = ${esp82xx_defaults.build_flags}
                            -Wl,-Teagle.flash.1m.ld
; lwIP 1.4 (Default)
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwidth
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; lwIP 2 - Higher Bandwitdh Low Memory no Features
;                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
; lwIP 2 - Higher Bandwitdh no Features
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH
; VTABLES in Flash (default)
                            -DVTABLES_IN_FLASH
; VTABLES in Heap
;                            -DVTABLES_IN_DRAM
; VTABLES in IRAM
;                            -DVTABLES_IN_IRAM
; enable one option set -> No exception recommended
; No exception code in firmware
                            -fno-exceptions
                            -lstdc++
; Exception code in firmware /needs much space! 90k
;                           -fexceptions
;                           -lstdc++-exc

[core_active]
; Select one core set for platform and build_flags
;platform                  = ${core_2_3_0.platform}
;build_flags               = ${core_2_3_0.build_flags}
;platform                  = ${core_2_4_2.platform}
;build_flags               = ${core_2_4_2.build_flags}
platform                  = ${core_2_5_0.platform}
build_flags               = ${core_2_5_0.build_flags}
;platform                  = ${core_stage.platform}
;build_flags               = ${core_stage.build_flags}

[common]
framework                 = arduino
board                     = esp01_1m
board_build.flash_mode    = dout

platform                  = ${core_active.platform}
build_flags               = ${core_active.build_flags}
;                            -DMQTT_MAX_PACKET_SIZE=1000
;                            -DUSE_CLASSIC
;                            -DBE_MINIMAL
;                            -DUSE_SENSORS
;                            -DUSE_BASIC
;                            -DUSE_KNX_NO_EMULATION
;                            -DUSE_DISPLAYS
                             -DUSE_CONFIG_OVERRIDE
							               -DUSE_CONFIG_OVERRIDE4

; *** Fix espressif8266@1.7.0 induced undesired all warnings
build_unflags             = -Wall

; set CPU frequency to 80MHz (default) or 160MHz
board_build.f_cpu         = 80000000L
;board_build.f_cpu         = 160000000L

monitor_speed             = 115200
upload_speed              = 115200
upload_resetmethod        = nodemcu

; *** Upload Serial reset method for Wemos and NodeMCU
;upload_port               = COM5
;extra_scripts             = pio/strip-floats.py

; *** Upload file to OTA server using SCP
;upload_port               = user@host:/path
;extra_scripts             = pio/strip-floats.py, pio/sftp-uploader.py

; *** Upload file to OTA server in folder api/arduino using HTTP
;upload_port               = domus1:80/api/upload-arduino.php
;extra_scripts             = pio/strip-floats.py, pio/http-uploader.py

; *********************************************************************



;[common] ; ************************************************************
; *** Esp8266 core for Arduino version 2.3.0
;platform = espressif8266@1.5.0
; *** Esp8266 core for Arduino version 2.4.0
;platform = espressif8266@1.6.0
; *** Esp8266 core for Arduino version 2.4.1
;platform = espressif8266@1.7.3
; *** Esp8266 core for Arduino version 2.4.2
;platform = espressif8266@1.8.0
; *** Esp8266 core for Arduino version latest beta
;platform = https://github.com/platformio/platform-espressif8266.git#feature/stage
; *** Esp8266 core for Arduino current version (located in %USERPROFILE%\.platformio\platforms\espressif8266)
;platform = espressif8266
; set CPU frequency to 80MHz (default) or 160MHz
;board_build.f_cpu = 80000000L
;board_build.f_cpu = 160000000L
;framework = arduino
;board = esp01_1m
board_build.flash_mode = dout
lib_deps = PubSubClient, ArduinoJSON
; *** Fix espressif8266@1.7.0 induced undesired all warnings
;build_unflags = -Wall

;build_flags =
;  -Wl,-Tesp8266.flash.1m0.ld
;  -DVTABLES_IN_FLASH
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
;   -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
;  -DMY_LANGUAGE=pl-PL
;  -DUSE_CONFIG_OVERRIDE4
;  -DENV_NAME=${platformio.env_default}
;  -DMQTT_MAX_PACKET_SIZE=1000
;  -DUSE_CONFIG_OVERRIDE
; lwIP 2 - Higher Bandwitdh
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; VTABLES in Flash (default)
;  -DVTABLES_IN_FLASH
; VTABLES in Heap
;  -DVTABLES_IN_DRAM
; VTABLES in IRAM
;  -DVTABLES_IN_IRAM
; *** Serial Monitor options

; *** Fix Esp/Arduino core 2.4.x induced Tasmota unused floating point includes

; *** Serial Monitor options
;monitor_speed = 115200

; *** Upload Serial reset method for Wemos and NodeMCU
;upload_speed = 115200
;upload_speed = 9600
;upload_resetmethod = nodemcu
;upload_port = COM3
;upload_port = COM8
;upload_port = COM9
;upload_speed = 9600
upload_port = root@192.168.100.113:/www

; *** Upload file to OTA server using SCP
;upload_port = user@host:/path
extra_scripts = pio/strip-floats.py, conf/sftp-uploader.py
;extra_scripts = pio/strip-floats.py


; *** Upload file to OTA server using HTTP
;upload_port = domus1:80/api/upload-arduino.php
;extra_scripts = pio/strip-floats.py, conf/http-uploader.py

[env:sonoff]

platform = ${common.platform}
framework = ${common.framework}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -Wl,-Teagle.flash.1m0.ld -DMY_LANGUAGE=pl-PL;-Tesp8266.flash.4m1m.ld ;  ;-Teagle.flash.1m0.ld;-Tesp8266.flash.4m1m.ld ;
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
board_build.f_cpu = ${common.board_build.f_cpu}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}
;lib_deps_external = ${common.lib_deps_external}

[env:wemeos-d1-pro-PL]

platform = ${common.platform}
framework = ${common.framework}
;board = ${common.board}
board = d1_mini
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -Wl,-Tesp8266.flash.4m1m.ld -DMY_LANGUAGE=pl-PL
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
board_build.f_cpu = ${common.board_build.f_cpu}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}
;lib_deps_external = ${common.lib_deps_external}
lib_deps = ${common.lib_deps}

[env:sonoff-knx]
platform = ${common.platform}
framework = ${common.framework}
board = ${common.board}
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -Wl,-Teagle.flash.1m0.ld -DMY_LANGUAGE=pl-PL -DUSE_KNX_NO_EMULATION
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.board_build.f_cpu}
upload_speed = ${common.upload_speed}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}



; Sonoff 4CH PRO multiple DS18x20-PL
[env:SONOFF_4CHPRO_RL-ds18x20-PL]

platform = ${common.platform}
framework = ${common.framework}
board = ${common.board}
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -Wl,-Teagle.flash.1m0.ld -DMY_LANGUAGE=pl-PL
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}
;lib_deps_external = ${common.lib_deps_external}
lib_deps = ${common.lib_deps}

; wemeos multiple soil DS18x20-PL
[env:soil-wemeos-PL]
platform = ${common.platform}
framework = ${common.framework}
;board = ${common.board}
board = esp_wroom_02
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags}   -Wl,-Tesp8266.flash.4m1m.ld -DMY_LANGUAGE=pl-PL
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}
;lib_deps_external = I2CSoilMoistureSensor
lib_deps_external = https://github.com/Apollon77/I2CSoilMoistureSensor
lib_deps = ${common.lib_deps}

; Sonoff multiple DS18x20-PL
[env:sonoff-ds18x20-PL]

platform = ${common.platform}
framework = ${common.framework}
board_build.f_cpu = ${common.board_build.f_cpu}
;board = ${common.board}
board = esp07
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} -Wl,-Teagle.flash.1m0.ld -DMY_LANGUAGE=pl-PL
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}
;lib_deps_external = ${common.lib_deps_external}
lib_deps = ${common.lib_deps}

[env:wemeos-d1-watter-PL]

platform = ${common.platform}
framework = ${common.framework}
board_build.f_cpu = ${common.board_build.f_cpu}
;board = ${common.board}
board = d1_mini
board_build.flash_mode = ${common.board_build.flash_mode}
build_unflags = ${common.build_unflags}
;build_flags =
;  -Wl,-Tesp8266.flash.1m0.ld
;  -DVTABLES_IN_FLASH
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
;   -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
;  -DMY_LANGUAGE=pl-PL
; -DUSE_CONFIG_OVERRIDE4
;  -DENV_NAME=${platformio.env_default}
;  -DMQTT_MAX_PACKET_SIZE=1000
;  -DUSE_CONFIG_OVERRIDE
; lwIP 2 - Higher Bandwitdh
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; VTABLES in Flash (default)
;  -DVTABLES_IN_FLASH
; VTABLES in Heap
;  -DVTABLES_IN_DRAM
; VTABLES in IRAM
;  -DVTABLES_IN_IRAM
; *** Serial Monitor options
build_flags = ${common.build_flags} -Wl,-Tesp8266.flash.4m1m.ld -DMY_LANGUAGE=pl-PL -DMQTT_MAX_PACKET_SIZE=1000
monitor_speed = ${common.monitor_speed}
upload_speed = ${common.upload_speed}
upload_resetmethod = ${common.upload_resetmethod}
upload_port = ${common.upload_port}
extra_scripts = ${common.extra_scripts}
;lib_deps_external = ${common.lib_deps_external}
lib_deps = ${common.lib_deps}
